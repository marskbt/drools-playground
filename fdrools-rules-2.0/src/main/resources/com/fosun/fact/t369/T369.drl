package com.fosun.fact.t369;


import com.fosun.fdrools.tools.*;
import com.fosun.fdrools.tools.dto.DynamicRuleInfoDTO;
import com.fosun.fdrools.tools.dto.RuleCommonDTO;
import com.fosun.fdrools.tools.dto.RuleParamDataDTO;
import com.fosun.fdrools.tools.dto.RuleDataSourceDTO;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSON;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Date;

function Boolean doValidationT369(String ruleCode,RuleCommonDTO commonDTO,RuleParamDataDTO paramDataDTO,Map ruleDataSourceMap,RuleResultDTO resultDTO){
   Logger.info(" 执行  T369");
    if(!Tools.isRuleCodeOK(ruleCode,"T369")){
        return Boolean.FALSE;
    }
    
    if(!ruleDataSourceMap.isEmpty()){
        //2年内是否有被 线上微额快速贷 机构查询历史
        //jxlmi数据源
        RuleDataSourceDTO afDataSource = (RuleDataSourceDTO)ruleDataSourceMap.get("JxlMI");
        JSONObject resObject = (JSONObject)afDataSource.getDsRes();
        JSONArray jsonArray = JSON.parseArray(resObject.getString("userSearchedHistoryByOrgs"));
        if (jsonArray != null && jsonArray.size() > 0) {
                for (int i = 0; i < jsonArray.size(); i++) {
                    JSONObject jsonObject = jsonArray.getJSONObject(i);
                    if (jsonObject != null && jsonObject.containsKey("searched_org")
                            && jsonObject.containsKey("searched_date")) {
                        String searchedOrg = jsonObject.getString("searched_org");
                        Date updt = Tools.stringToDate(jsonObject.getString("searched_date"), "yyyy-MM-dd");
                        Date now = Tools.addYear(new Date(), -2);
                        if ("线上微额快速贷".equals(searchedOrg) && updt.after(now)) {
                            return Boolean.TRUE;
                        }
                    }
                }
        }
    }
    return Boolean.FALSE;
}

rule "T369"
when

$ruleResultDTO:RuleResultDTO();
$dynamicRuleInfoDTO:DynamicRuleInfoDTO(doValidationT369(ruleCode,ruleCommonDTO,ruleParamDataDTO,ruleDataSourceMap,$ruleResultDTO));
then

Map<String,Object> extraMap = new HashMap<String,Object>();
extraMap.put("testMap",123);
$ruleResultDTO.setResult(Tools.HIT);
$ruleResultDTO.setExtraResultMap(extraMap);
$dynamicRuleInfoDTO.setRuleResultDTO($ruleResultDTO);
end