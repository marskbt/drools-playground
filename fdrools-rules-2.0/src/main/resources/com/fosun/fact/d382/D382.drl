package com.fosun.fact.d382;


import com.fosun.fdrools.tools.*;
import com.fosun.fdrools.tools.dto.DynamicRuleInfoDTO;
import com.fosun.fdrools.tools.dto.RuleCommonDTO;
import com.fosun.fdrools.tools.dto.RuleParamDataDTO;
import com.fosun.fdrools.tools.dto.RuleDataSourceDTO;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSON;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Date;

function Boolean doValidationD382(String ruleCode,RuleCommonDTO commonDTO,RuleParamDataDTO paramDataDTO,Map ruleDataSourceMap,RuleResultDTO resultDTO){
   Logger.info(" 执行  D382");
    if(!Tools.isRuleCodeOK(ruleCode,"D382")){
        return Boolean.FALSE;
    }
    
    if(!ruleDataSourceMap.isEmpty()){
        //法院失信- 宜信-法院失信（风险时间五年内）
        //阿福福网黑名单数据源
        RuleDataSourceDTO afDataSource = (RuleDataSourceDTO)ruleDataSourceMap.get("AF_MIXED_RISK");
        JSONObject resObject = (JSONObject)afDataSource.getDsRes();
        JSONArray jsonArray = JSON.parseArray(resObject.getString("resultList"));
        if (jsonArray != null && jsonArray.size() > 0) {
                for (int i = 0; i < jsonArray.size(); i++) {
                    JSONObject tempJson = jsonArray.getJSONObject(i);
                    String riskDetailCode = tempJson.getString("riskDetailCode");
                    //风险最近时间格式：2014
                    int riskTime = Integer.valueOf(tempJson.getString("riskTime"));
                    //("10","长期拖欠"),("11","申请信息虚假"),("12","资料虚假"),("13","伪冒"),("14","丧失还款能力"),("15","用途风险"),("16","同行中介"),
                    //("17","不良客户"),("18","法院-失信"),("19","法院-被执行"),("20","疑似欺诈或高风险"),("99","其他")
                    if ("18".equals(riskDetailCode) && riskTime >= Tools.getAddYear(-5)) {
                        return Boolean.TRUE;
                    }
                }
        }
    }
    return Boolean.FALSE;
}

rule "D382"
when

$ruleResultDTO:RuleResultDTO();
$dynamicRuleInfoDTO:DynamicRuleInfoDTO(doValidationD382(ruleCode,ruleCommonDTO,ruleParamDataDTO,ruleDataSourceMap,$ruleResultDTO));
then

Map<String,Object> extraMap = new HashMap<String,Object>();
extraMap.put("testMap",123);
$ruleResultDTO.setResult(Tools.HIT);
$ruleResultDTO.setExtraResultMap(extraMap);
$dynamicRuleInfoDTO.setRuleResultDTO($ruleResultDTO);
end