package com.fosun.fact.d319;


import com.fosun.fdrools.tools.*;
import com.fosun.fdrools.tools.dto.DynamicRuleInfoDTO;
import com.fosun.fdrools.tools.dto.RuleCommonDTO;
import com.fosun.fdrools.tools.dto.RuleParamDataDTO;
import com.fosun.fdrools.tools.dto.RuleDataSourceDTO;

import com.alibaba.fastjson.JSONObject;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import com.alibaba.fastjson.JSON;

function Boolean doValidationD319(String ruleCode,RuleCommonDTO commonDTO,RuleParamDataDTO paramDataDTO,Map ruleDataSourceMap,RuleResultDTO resultDTO){
   Logger.info(" 执行  D319");
    if(!Tools.isRuleCodeOK(ruleCode,"D319")){
        return Boolean.FALSE;
    }
    
    if(!ruleDataSourceMap.isEmpty()){
       RuleDataSourceDTO afDataSource = (RuleDataSourceDTO)ruleDataSourceMap.get("JxlMI");
       JSONObject resObj = (JSONObject)afDataSource.getDsRes();
       String userGray = resObj.getString("userGray");
       if(userGray!=null&&userGray!=""){
            JSONObject grayObject = JSON.parseObject(userGray);
    		double contactsClass1Cnt = grayObject.getDoubleValue("contacts_class1_cnt");
    		double contactsClass1BlacklistCnt = grayObject.getDoubleValue("contacts_class1_blacklist_cnt");
    		double score = contactsClass1BlacklistCnt / contactsClass1Cnt;
    		Logger.info("计算得分"+score);
            if(score>=0.7){
                   return Boolean.TRUE;
            }    
       }
    }
    
    return Boolean.FALSE;
}

rule "D319"
when

$ruleResultDTO:RuleResultDTO();
$dynamicRuleInfoDTO:DynamicRuleInfoDTO(doValidationD319(ruleCode,ruleCommonDTO,ruleParamDataDTO,ruleDataSourceMap,$ruleResultDTO));
then

Map<String,Object> extraMap = new HashMap<String,Object>();
extraMap.put("testMap",123);
$ruleResultDTO.setResult(Tools.HIT);
$ruleResultDTO.setExtraResultMap(extraMap);
$dynamicRuleInfoDTO.setRuleResultDTO($ruleResultDTO);
end

