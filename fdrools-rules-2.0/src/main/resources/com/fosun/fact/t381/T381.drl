package com.fosun.fact.t381;


import com.fosun.fdrools.tools.*;
import com.fosun.fdrools.tools.dto.DynamicRuleInfoDTO;
import com.fosun.fdrools.tools.dto.RuleCommonDTO;
import com.fosun.fdrools.tools.dto.RuleParamDataDTO;
import com.fosun.fdrools.tools.dto.RuleDataSourceDTO;

import com.alibaba.fastjson.JSONObject;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import com.alibaba.fastjson.JSONArray;

function Boolean doValidationT381(String ruleCode,RuleCommonDTO commonDTO,RuleParamDataDTO paramDataDTO,Map ruleDataSourceMap,RuleResultDTO resultDTO){
   Logger.info(" 执行  T381");
    if(!Tools.isRuleCodeOK(ruleCode,"T381")){
        return Boolean.FALSE;
    }
    
    if(!ruleDataSourceMap.isEmpty()){
       RuleDataSourceDTO fhSxDataSource = (RuleDataSourceDTO)ruleDataSourceMap.get("FHKtgg");
       JSONArray array = (JSONArray)fhSxDataSource.getDsRes();
       JSONObject reqObj = (JSONObject)fhSxDataSource.getDsReq();
       Logger.info("规则执行请求参数:"+reqObj);
       if(array != null && array.size()>0){
           for(int i =0;i<array.size();i++){
               JSONObject object = (JSONObject) array.get(i);
               Logger.info("规则执行请求参数:"+object);
               Logger.info("规则执行请求参数:"+object.getString("dataType"));
               
               if("ktgg".equals(object.getString("dataType"))){
                    boolean flag = Tools.result(object.getString("matchratio"),object.getString("sortTimeString"),5); 
                    boolean flagStatus = Tools.checkParty(reqObj.getString("personName"),object.getString("pname"));
                    Logger.info("规则执行请求参数:"+flag);
                    Logger.info("规则执行请求参数:"+flagStatus);
                    if(flag&&flagStatus){
                        return Boolean.TRUE;
                    }
               }
           }
       }
    }
    
    return Boolean.FALSE;
}

rule "T381"
when

$ruleResultDTO:RuleResultDTO();
$dynamicRuleInfoDTO:DynamicRuleInfoDTO(doValidationT381(ruleCode,ruleCommonDTO,ruleParamDataDTO,ruleDataSourceMap,$ruleResultDTO));
then

Map<String,Object> extraMap = new HashMap<String,Object>();
extraMap.put("testMap",123);
$ruleResultDTO.setResult(Tools.HIT);
$ruleResultDTO.setExtraResultMap(extraMap);
$dynamicRuleInfoDTO.setRuleResultDTO($ruleResultDTO);
end

