package com.fosun.fact.t311;


import com.fosun.fdrools.tools.*;
import com.fosun.fdrools.tools.dto.DynamicRuleInfoDTO;
import com.fosun.fdrools.tools.dto.RuleCommonDTO;
import com.fosun.fdrools.tools.dto.RuleParamDataDTO;
import com.fosun.fdrools.tools.dto.RuleDataSourceDTO;

import com.alibaba.fastjson.JSONObject;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import com.alibaba.fastjson.JSONArray;

function Boolean doValidationT311(String ruleCode,RuleCommonDTO commonDTO,RuleParamDataDTO paramDataDTO,Map ruleDataSourceMap,RuleResultDTO resultDTO){
   Logger.info("执行  T311");
    if(!Tools.isRuleCodeOK(ruleCode,"T311")){
        return Boolean.FALSE;
    }
    
    if(!ruleDataSourceMap.isEmpty()){
       RuleDataSourceDTO fhSxDataSource = (RuleDataSourceDTO)ruleDataSourceMap.get("FHKtgg");
       JSONArray array = (JSONArray)fhSxDataSource.getDsRes();
       JSONObject reqObj = (JSONObject)fhSxDataSource.getDsReq();
       if(array != null && array.size()>0){
           for(int i =0;i<array.size();i++){
               JSONObject object = (JSONObject) array.get(i);
               if("ktgg".equals(object.getString("dataType"))){
               			boolean flag = Tools.validFHSortTime(object.getString("sortTimeString"), 1);
               			boolean etrFlag = Tools.checkDefendant(reqObj.getString("personName"),object.getString("defendant"));
                    if(flag&&etrFlag){
                        return Boolean.TRUE;
                    }
               }
           }
       }
    }
    
    return Boolean.FALSE;
}


rule "T311"
when

$ruleResultDTO:RuleResultDTO();
$dynamicRuleInfoDTO:DynamicRuleInfoDTO(doValidationT311(ruleCode,ruleCommonDTO,ruleParamDataDTO,ruleDataSourceMap,$ruleResultDTO));
then

Map<String,Object> extraMap = new HashMap<String,Object>();
extraMap.put("testMap","123");
$ruleResultDTO.setResult(Tools.HIT);
$ruleResultDTO.setExtraResultMap(extraMap);
$dynamicRuleInfoDTO.setRuleResultDTO($ruleResultDTO);
end
