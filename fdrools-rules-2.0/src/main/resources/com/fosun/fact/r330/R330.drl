package com.fosun.fact.r330;


import com.fosun.fdrools.tools.*;
import com.fosun.fdrools.tools.dto.DynamicRuleInfoDTO;
import com.fosun.fdrools.tools.dto.RuleCommonDTO;
import com.fosun.fdrools.tools.dto.RuleParamDataDTO;
import com.fosun.fdrools.tools.dto.RuleDataSourceDTO;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

function Boolean doValidationR330(String ruleCode,RuleCommonDTO commonDTO,RuleParamDataDTO paramDataDTO,Map ruleDataSourceMap,RuleResultDTO resultDTO){
   Logger.info(" 执行  R330");
    if(!Tools.isRuleCodeOK(ruleCode,"R330")){
        return Boolean.FALSE;
    }
    
    if(!ruleDataSourceMap.isEmpty()){
       RuleDataSourceDTO jyDataSource = (RuleDataSourceDTO)ruleDataSourceMap.get("1003");
       JSONArray jsonArray = (JSONArray)jyDataSource.getDsRes();
       JSONObject jsonObject = jsonArray.getJSONObject(0);
       String loanInformation = jsonObject.getString("loanInformation");
       if ("0".equals(loanInformation)) {
           return Boolean.FALSE;
       }
       for(int i = 0;i<jsonArray.size();i++){
           JSONObject object = jsonArray.getJSONObject(i);
           Integer repayState = Integer.valueOf(object.getString("repaystate"));
            if (repayState >= 2 && repayState < 9) {
                return Boolean.TRUE;
            }
       }
    }
    
    return Boolean.FALSE;
}

rule "R330"
when

$ruleResultDTO:RuleResultDTO();
$dynamicRuleInfoDTO:DynamicRuleInfoDTO(doValidationR330(ruleCode,ruleCommonDTO,ruleParamDataDTO,ruleDataSourceMap,$ruleResultDTO));
then

Map<String,Object> extraMap = new HashMap<String,Object>();
$ruleResultDTO.setResult(Tools.HIT);
$ruleResultDTO.setExtraResultMap(extraMap);
$dynamicRuleInfoDTO.setRuleResultDTO($ruleResultDTO);
end